###########
# BUILDER #
###########

# pull official base image
FROM python:3.10.2 as builder

# set work directory
WORKDIR /usr/src/FSTR

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1


# install psycopg2 dependencies
RUN apt-get update \
    && apt-get install netcat -y
RUN apt-get upgrade -y && apt-get install postgresql gcc python3-dev musl-dev -y


# lint
RUN pip install --upgrade pip
COPY . .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/FSTR/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.10.2

# create directory for the app user
RUN mkdir -p /home/FSTR

# create the app user
#RUN addgroup -S app && adduser -S app -G app
RUN addgroup --system -gid 1000 app && adduser --system -uid 1000 -gid 1000 app

# create the appropriate directories
ENV HOME=/home/FSTR
ENV APP_HOME=/home/FSTR/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install -qq -y build-essential libpq-dev
COPY --from=builder /usr/src/FSTR/wheels /wheels
COPY --from=builder /usr/src/FSTR/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy project
COPY . $APP_HOME

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/FSTR/web/entrypoint.prod.sh"]


